/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.AdminWorkSpace;

import Business.ECOSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.PlasmaBankEnterprise;
import Business.Organization.Organization;
import Business.Organization.PlasmaBankOrganization;
import Business.Organization.ReceptionOrganization;
import Business.Person.Donor;
import Business.Person.Patient;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.charts.DonorStatistics;
import Business.charts.DonorsChart;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.RefineryUtilities;

/*
 *
 * @author patol
 */
public class StatisticsJPanel extends javax.swing.JPanel {
    
    ECOSystem system;

    /**
     * Creates new form StatisticsJPanel
     */
    public StatisticsJPanel(JPanel panel, ECOSystem system) {
        this.system = system;
        initComponents();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelPie1 = new javax.swing.JLabel();
        jLabelLine1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(31, 31, 31));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Statistics");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 1631, Short.MAX_VALUE)
                .addGap(57, 57, 57))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1700, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/statistics.png"))); // NOI18N
        jLabel1.setToolTipText("");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 210, 130, 140));

        jLabelPie1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pie-chart.png"))); // NOI18N
        jLabelPie1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelPie1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPie1MouseClicked(evt);
            }
        });
        add(jLabelPie1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 70, 70));

        jLabelLine1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pie-chart.png"))); // NOI18N
        jLabelLine1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelLine1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLine1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelLine1MouseEntered(evt);
            }
        });
        add(jLabelLine1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, 70, 60));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Plasma Given vs Not Given");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Donors by Blood Group");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelPie1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPie1MouseClicked
        // TODO add your handling code here:
        
        List<DonorStatistics> donorsStats = new ArrayList<>();
        String[] bloodGroupArray  = {"O-positive", "O-negative ", "A-positive", "A-negative", "B-positive", "B-negative", "AB-positive", "AB-negative"};
        int noOfDonors = 0;
        
        
            
        for(Enterprise enterprise : system.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList())
        {
            if(enterprise instanceof PlasmaBankEnterprise)
            {
                for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
                {
                   if(organization instanceof PlasmaBankOrganization)
                   {
                       for(String bGrp : bloodGroupArray)
                       {
                           noOfDonors = 0;
                       for(Donor donor : organization.getDonorDirectory().getDonorList())
                       {
                           if(donor.getBloodGroup().equals(bGrp))
                           {
                               noOfDonors++;
                           }
                       }
                       DonorStatistics donorStatistics = new DonorStatistics();
                       donorStatistics.setBloodGroup(bGrp);
                       donorStatistics.setNoOfDonors(noOfDonors);
                       donorsStats.add(donorStatistics);
                       }
                   }
                }
            }
        }
         DonorsChart donorsChart = new DonorsChart("Donors By Blood Group",donorsStats);
    donorsChart.setSize( 560 , 367 );    
      RefineryUtilities.centerFrameOnScreen( donorsChart );    
      donorsChart.setVisible( true ); 
      
       
    }//GEN-LAST:event_jLabelPie1MouseClicked

    private void jLabelLine1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLine1MouseEntered
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jLabelLine1MouseEntered

    private void jLabelLine1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLine1MouseClicked
       
        int plasmaNotGivenCount= 0;
         int plasmaGivenCount= 0;
        for(Enterprise enterprise : system.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList())
        {
            if(enterprise instanceof HospitalEnterprise)
            {
                for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
                {
                   if(organization instanceof ReceptionOrganization)
                   {
                       for(Patient p : organization.getPatientDirectory().getPatientsList())
                       {
                           for(WorkRequest request :  system.getWorkQueue().getWorkRequestList())
                           {
                               if(p.getEmailAdd().equals(((LabTestWorkRequest)request).getPatientName()))
                               {
                                   if(request.getStatus().equals("Delivered"))
                                   {
                                       plasmaGivenCount++;
                                       break;
                                   }
                                   
                               }
                           }
                       }
                         plasmaNotGivenCount = organization.getPatientDirectory().getPatientsList().size() - plasmaGivenCount;
                   }
                }
            }
        }
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Plasma Given", plasmaGivenCount);
        pieDataset.setValue("Plasma Not Given", plasmaNotGivenCount);
        // pieDataset.setValue("Three", new Integer(30));
        // pieDataset.setValue("Four", new Integer(40));
        JFreeChart piechart = ChartFactory.createPieChart("Pie Chart", pieDataset, true, true, true);
        PiePlot piechrt = (PiePlot)piechart.getPlot();
        //piechrt.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame chrtframe = new ChartFrame("Pie Chart", piechart);
        chrtframe.setVisible(true);
        chrtframe.setSize(1200,850);
        chrtframe.setBackground(Color.WHITE);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        chrtframe.setLocation(dim.width/2-this.getSize().width/2, dim.height/2- this.getSize().height/2);
        
    }//GEN-LAST:event_jLabelLine1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelLine1;
    private javax.swing.JLabel jLabelPie1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
