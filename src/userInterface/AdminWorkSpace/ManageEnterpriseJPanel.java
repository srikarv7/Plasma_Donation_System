/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.AdminWorkSpace;

import Business.ECOSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.RegularExpressionCheck;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author patol
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    private JPanel userProcessContainer;
    private ECOSystem system;

    public ManageEnterpriseJPanel(JPanel userProcessContainer, ECOSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateComboBox();
        JTableEnterprise.getTableHeader().setFont(new Font("Times New Roman", Font.ITALIC, 23));
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) JTableEnterprise.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                Object[] row = new Object[3];
                row[0] = enterprise.getName();
                row[1] = network.getName();
                row[2] = enterprise.getEnterpriseType().getValue();

                model.addRow(row);
            }
        }
    }

    private void populateComboBox() {
        JComboBoxCity.removeAllItems();
        JComboBoxEnterpriseType.removeAllItems();

        for (Network network : system.getNetworkList()) {
            JComboBoxCity.addItem(network);
        }

        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            JComboBoxEnterpriseType.addItem(type);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JComboBoxCity = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        JTextFieldName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableEnterprise = new javax.swing.JTable();
        JComboBoxEnterpriseType = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 102));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel1.setText("City");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 90, -1));

        JComboBoxCity.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        JComboBoxCity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        JComboBoxCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBoxCityActionPerformed(evt);
            }
        });
        add(JComboBoxCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 200, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 110, -1));

        JTextFieldName.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        add(JTextFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 200, -1));

        JTableEnterprise.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        JTableEnterprise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise", "Network", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTableEnterprise);
        if (JTableEnterprise.getColumnModel().getColumnCount() > 0) {
            JTableEnterprise.getColumnModel().getColumn(0).setResizable(false);
            JTableEnterprise.getColumnModel().getColumn(1).setResizable(false);
            JTableEnterprise.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 940, 120));

        JComboBoxEnterpriseType.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        JComboBoxEnterpriseType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        JComboBoxEnterpriseType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBoxEnterpriseTypeActionPerformed(evt);
            }
        });
        add(JComboBoxEnterpriseType, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 200, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        jLabel3.setText("Enterprise Type");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 188, -1));

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 130, -1));

        btnSubmit.setBackground(new java.awt.Color(0, 0, 0));
        btnSubmit.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmit.setBorderPainted(false);
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, 130, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\TEJAL\\Downloads\\enterprise.jpg")); // NOI18N
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, 600, 330));
    }// </editor-fold>//GEN-END:initComponents

    private void JComboBoxCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboBoxCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JComboBoxCityActionPerformed

    private void JComboBoxEnterpriseTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboBoxEnterpriseTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JComboBoxEnterpriseTypeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkArea sysAdminwjp = (SystemAdminWorkArea) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:

        Network network = (Network) JComboBoxCity.getSelectedItem();
        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) JComboBoxEnterpriseType.getSelectedItem();

        if (network == null || type == null) {
            JOptionPane.showMessageDialog(null, "Invalid Input!");
            return;
        }

        String name = JTextFieldName.getText();

        if (name.equals("")) {
            JOptionPane.showMessageDialog(null, "Enterprise name can not by empty.");
            return;
        } else {
            if (!RegularExpressionCheck.findRE(name)) {
                JOptionPane.showMessageDialog(null, "Enter valid Enterprise name.");
                return;
            }
        }

        int flag = 1;
        ArrayList<Enterprise> enterpriseList = network.getEnterpriseDirectory().getEnterpriseList();
        for (int i = 0; i < enterpriseList.size(); i++) {
            if (enterpriseList.get(i).getName().equalsIgnoreCase(name)) {
                flag = 0;
            }
        }

        if (flag == 1) {
            Enterprise enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(name, type);
            JTextFieldName.setText("");
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Enterprise already exists");
        }

    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox JComboBoxCity;
    private javax.swing.JComboBox JComboBoxEnterpriseType;
    private javax.swing.JTable JTableEnterprise;
    private javax.swing.JTextField JTextFieldName;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
