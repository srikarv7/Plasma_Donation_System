/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.HospitalAdminWorkSpace;

import Business.Enterprise.PublicityTeamEnterprise;
import Business.Enterprise.PlasmaBankEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.CommitteeEnterprise;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import java.awt.CardLayout;
import java.awt.Font;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.TransportationEnterprise;
import javax.swing.JOptionPane;

/**
 *
 * @author patol
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    JPanel container;
    private OrganizationDirectory directory;
    private Enterprise enterprise;

    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageOrganizationJPanel(JPanel container, OrganizationDirectory directory, Enterprise enterprise) {
        initComponents();
        this.container = container;
        this.directory = directory;
        this.enterprise = enterprise;
        
        populateDropDown();
        populateTable();
        populateCombo();
        organizationJTable.getTableHeader().setFont(new Font("Times New Roman", Font.ITALIC, 23));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        JComboBoxOrganization = new javax.swing.JComboBox();
        btnAddOrganization = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        organizationJTable.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Organization ");

        JComboBoxOrganization.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        JComboBoxOrganization.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        JComboBoxOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBoxOrganizationActionPerformed(evt);
            }
        });

        btnAddOrganization.setBackground(new java.awt.Color(0, 0, 0));
        btnAddOrganization.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnAddOrganization.setForeground(new java.awt.Color(255, 255, 255));
        btnAddOrganization.setText("Add Organization");
        btnAddOrganization.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddOrganization.setBorderPainted(false);
        btnAddOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrganizationActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 113, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JComboBoxOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(363, 363, 363))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnBack)
                .addGap(263, 263, 263)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(JComboBoxOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(btnAddOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddOrganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrganizationActionPerformed

       if(enterprise instanceof HospitalEnterprise){
            if (directory.getOrganizationList().size() == 2) {
                removeItems(); 
             }
             else{
                addItemsInDirectory();  
            }
       }
       
       if(enterprise instanceof PlasmaBankEnterprise) {
           if (directory.getOrganizationList().size() == 2) {
                removeItems();
            }
            else{
                addItemsInDirectory();
           }
       }
       
       if(enterprise instanceof PublicityTeamEnterprise){
           if (directory.getOrganizationList().size() == 1) {
                removeItems();
            }
            else{
                addItemsInDirectory();
           }
       }
       
       if(enterprise instanceof CommitteeEnterprise){
           if (directory.getOrganizationList().size() == 1) {
                removeItems();
            }
            else{
                addItemsInDirectory();
           }
       }
       
        if(enterprise instanceof PlasmaBankEnterprise){
           if (directory.getOrganizationList().size() == 1) {
                removeItems();
            }
            else{
                addItemsInDirectory();
           }
       }
         if(enterprise instanceof TransportationEnterprise){
           if (directory.getOrganizationList().size() == 2) {
                removeItems();
            }
            else{
                addItemsInDirectory();
           }
       }
    }//GEN-LAST:event_btnAddOrganizationActionPerformed

    private void JComboBoxOrganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboBoxOrganizationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JComboBoxOrganizationActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox JComboBoxOrganization;
    private javax.swing.JButton btnAddOrganization;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        model.setRowCount(0);
        for (Organization organization : directory.getOrganizationList()) {
            Object[] row = new Object[2];
            row[0] = organization.getOrganizationID();
            row[1] = organization.getName();

            model.addRow(row);
        }
    }

    private void populateCombo() {
        JComboBoxOrganization.removeAllItems();
        for (Organization.Type type : Organization.Type.values()) {

           
            if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnumType.Hospital.getValue())) {
                if (type.getValue().equals(Organization.Type.Doctor.getValue()) || type.getValue().equals(Organization.Type.Reception.getValue())) {
                    JComboBoxOrganization.addItem(type);

                }

            }

            if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnumType1.PublicityTeam.getValue())) {
                if (type.getValue().equals(Organization.Type.PublicityTeamAdmin.getValue())) {
                    JComboBoxOrganization.addItem(type);

                }
            }
            if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnumType2.Committee.getValue())) {
                if (type.getValue().equals(Organization.Type.CommitteeAdmin.getValue())) {
                    JComboBoxOrganization.addItem(type);

                }
            }
              if (enterprise.getEnterpriseType().getValue().equals(Enterprise.PlasmaType.PlasmaBank.getValue())) {
                if (type.getValue().equals(Organization.Type.PlasmaBankAdmin.getValue())) {
                    JComboBoxOrganization.addItem(type);

                }
            }
             if (enterprise.getEnterpriseType().getValue().equals(Enterprise.Transporatation.Transportation.getValue())) {
                if (type.getValue().equals(Organization.Type.TransportationAdmin.getValue()) || type.getValue().equals(Organization.Type.DeliveryMan.getValue())) {
                    JComboBoxOrganization.addItem(type);

                }
            }
            
            
        }
    }

    private void populateDropDown() {
         if(enterprise instanceof HospitalEnterprise){
             if (directory.getOrganizationList().size() >6) {
                JComboBoxOrganization.removeAll();
                JComboBoxOrganization.setEnabled(false);
            }
         }else if(enterprise instanceof PlasmaBankEnterprise){
             if (directory.getOrganizationList().size() >= 2) {
                JComboBoxOrganization.removeAll();
                JComboBoxOrganization.setEnabled(false);
            }
         }else if(enterprise instanceof PublicityTeamEnterprise){
             if (directory.getOrganizationList().size() >= 1) {
                JComboBoxOrganization.removeAll();
                JComboBoxOrganization.setEnabled(false);
            }
         }
         else if(enterprise instanceof CommitteeEnterprise){
             if (directory.getOrganizationList().size() >= 1) {
                JComboBoxOrganization.removeAll();
                JComboBoxOrganization.setEnabled(false);
            }
         }
          else if(enterprise instanceof TransportationEnterprise){
             if (directory.getOrganizationList().size() >= 1) {
                JComboBoxOrganization.removeAll();
                JComboBoxOrganization.setEnabled(false);
            }
         }
         
         
        
    }

    private void removeItems() {
        JComboBoxOrganization.removeAll();
        JComboBoxOrganization.setEnabled(false);
        JOptionPane.showMessageDialog(null, "You cannot add the same organization again. All organizations are created already.");
    }

    private void addItemsInDirectory() {
        Organization.Type type = (Organization.Type) JComboBoxOrganization.getSelectedItem();
        directory.createOrganization(type);
        populateTable();
        JComboBoxOrganization.removeItem(JComboBoxOrganization.getSelectedItem());
        JOptionPane.showMessageDialog(null, "Organization added successfully.");
    }
}
